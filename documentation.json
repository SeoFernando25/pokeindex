{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PokedexService",
            "id": "injectable-PokedexService-543396193b32a6a1110727c20a5693694fb53db53a0df96bfa95a84e53b567bf9cf2aa69ed6c13205c171fef949273b31572eeec80d49e7a6777e11a07aa65c0",
            "file": "src/app/services/pokedex.service.ts",
            "properties": [
                {
                    "name": "client",
                    "defaultValue": "new MainClient()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "filteredPokemon",
                    "defaultValue": "new BehaviorSubject<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "nextSearchTask",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokemonIdentifiers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "previousSearch",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searching",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "identifierToReadableName",
                    "args": [
                        {
                            "name": "identifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns a readable name from a pokemon identifier\n",
                    "description": "<p>Returns a readable name from a pokemon identifier</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "identifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 959,
                                "end": 966,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the pokemon&#39;s readable name</p>\n"
                        }
                    ]
                },
                {
                    "name": "implNameFilterPokemons",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initPokemonNames",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        131
                    ]
                },
                {
                    "name": "nameFilterPokemon",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "readableNameToIdentifier",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns the pokemon identified by the given name\n",
                    "description": "<p>Returns the pokemon identified by the given name</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 673,
                                "end": 677,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 667,
                                "end": 672,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 685,
                                "end": 692,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the pokemon name with spaces replaced with dashes and all lowercase</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MainClient } from \"pokenode-ts\";\nimport { getStringScores } from '../lib/stringComp';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokedexService {\n  public readonly client = new MainClient();\n  public pokemonIdentifiers: string[] = [];\n\n  public filteredPokemon: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n  public previousSearch: string = \"\";\n  public nextSearchTask: string | null = null;\n  public searching: boolean = false;\n\n  constructor() {\n    this.initPokemonNames();\n  }\n\n  /**\n   * Returns the pokemon identified by the given name\n   * @param name \n   * @returns the pokemon name with spaces replaced with dashes and all lowercase \n   */\n  public readableNameToIdentifier(name: string) {\n    return name.toLowerCase().split(' ').join('-');\n  }\n\n  /**\n   * Returns a readable name from a pokemon identifier\n   * @param name\n   * @returns the pokemon's readable name\n    */\n  public identifierToReadableName(identifier: string) {\n    // replace dashes with spaces and capitalize each word\n    return identifier.split('-').map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  }\n\n  public async initPokemonNames() {\n    // Check if 'pokemonNames' is in local storage\n    try {\n      this.pokemonIdentifiers = JSON.parse(localStorage.getItem('pokemonNames') || \"}{\");\n      this.filteredPokemon.next(this.pokemonIdentifiers);\n      console.log(\"Pokemon names loaded from local storage\");\n      this.nameFilterPokemon(localStorage.getItem(\"search\") || \"Charizard\"); // Initialize filteredPokemons\n      return;\n    } catch (error) {\n      console.log(\"Error loading pokemon names from local storage\");\n    }\n\n    // If not, load them from the API\n    let pokemons = await this.client.pokemon.listPokemons(0, Number.MAX_SAFE_INTEGER);\n    // The pokemons with largest identifier are about 20 characters long (24 bytes)\n    // given that we have about 1200 pokemons, we only have to transfer ~24kb initially\n\n\n    // Save readable pokemon names to localStorage\n    this.pokemonIdentifiers = pokemons.results.map((pokemon) => pokemon.name);\n    localStorage.setItem('pokemonNames', JSON.stringify(this.pokemonIdentifiers));\n    console.log(\"Pokemon names saved to local storage\");\n    this.filteredPokemon.next(this.pokemonIdentifiers);\n    this.nameFilterPokemon(localStorage.getItem(\"search\") || \"Charizard\"); // Initialize filteredPokemons\n  }\n\n  public nameFilterPokemon(name: string) {\n    if (this.searching) {\n      console.log(\"Already searching\");\n      this.nextSearchTask = name;\n    } else {\n      console.log(\"Starting search\");\n      this.searching = true;\n      this.implNameFilterPokemons(name).then(() => {\n        this.searching = false;\n        if (this.nextSearchTask !== null) {\n          this.implNameFilterPokemons(this.nextSearchTask);\n          this.nextSearchTask = null;\n        } else {\n          console.log(\"No more tasks\");\n        }\n      });\n    }\n  }\n\n  public async implNameFilterPokemons(name: string) {\n    localStorage.setItem(\"search\", name);\n    this.previousSearch = name;\n    if (name.length === 0) {\n      this.filteredPokemon.next(this.pokemonIdentifiers);\n      return;\n    }\n\n\n\n\n    // If search string is quoted, search for contains match\n    if (name.startsWith('\"') && name.endsWith('\"')) {\n      name = name.slice(1, name.length - 1);\n      this.filteredPokemon.next(\n        this.pokemonIdentifiers.filter((pokemon) =>\n          this.identifierToReadableName(pokemon)\n            .toLowerCase().includes(name.toLowerCase())));\n      return;\n    }\n\n    let pokemons = this.pokemonIdentifiers;\n    let scores = await getStringScores(name, pokemons);\n\n    let sortedScores = scores.map((score, index) => [score, index]).sort((a, b) => b[0] - a[0]);\n    let res = sortedScores.map((score, _) => pokemons[score[1]]);\n    // Only show pokemons with a score of 0.5 or higher\n    let result = [];\n    for (let i = 0; i < res.length; i++) {\n      if (sortedScores[i][0] >= 0.5) {\n        result.push(res[i]);\n      } else {\n        break;\n      }\n    }\n\n\n    this.filteredPokemon.next(result);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-bf4ed5aa681950e6dc4e2ea809ddb07dfdce6a9dde0d857205c3386428806da93f23754442a1e6a6ae962218a1d68c6971706909825f4a0995f6c9a9f9ece7b1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'PokeIndex'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getState",
                    "args": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChildrenOutletContexts, RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n\n  title = 'PokeIndex';\n\n  constructor(public translate: TranslateService, private contexts: ChildrenOutletContexts) {\n    // Initial Locale setup\n    translate.setDefaultLang('en');\n    translate.addLangs(['en', 'fr']);\n\n    // Check if \"lang\" is in localStorage\n    const browserLang = localStorage.getItem('lang');\n    if (browserLang) {\n      translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n    } else {\n      translate.use('en');\n      localStorage.setItem('lang', 'en');\n    }\n  }\n\n  getState(outlet: RouterOutlet) {\n    return outlet.activatedRouteData['state'];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// .wrapper {\n//   display: flex;\n//   flex-flow: column;\n//   width: 100%;\n//   margin: 0px auto;\n//   padding: 0px auto;\n//   overflow: hidden !important;\n// }\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n  min-height: 100%;\n  min-width: 100%;\n  max-width: 100%;\n  max-height: 100%;\n}\n\n\n.router-wrapper {\n  display: flex;\n  flex-flow: row;\n  height: 100% !important;\n  max-height: 100% !important;\n  width: 100%;\n  margin: 0px auto;\n  padding: 0px auto;\n  overflow-y: scroll;\n  // background-color: blue;\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "contexts",
                        "type": "ChildrenOutletContexts",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "contexts",
                        "type": "ChildrenOutletContexts",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"wrapper\">\n  <app-titlebar></app-titlebar>\n  <main class=\"flex-1\">\n    <router-outlet></router-outlet>\n  </main>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "EntryComponent",
            "id": "component-EntryComponent-eec392141f63e5cf3f3a9b6ffaf893eab0097ade50b0204299267b8a746258800c92428228a16ef3351a4cd552e441976362ff080d41fc0f69d8cfb35bf285cd",
            "file": "src/app/pages/entry/entry.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-entry",
            "styleUrls": [
                "./entry.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "eggGroups",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "initScroll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "pokedex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PokedexService",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokemon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Pokemon | null",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "pokemonName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "pokemonSpecies",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PokemonSpecies | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "pokemonViewRef",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | null",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'pokemonViewRef'"
                        }
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getStatStr",
                    "args": [
                        {
                            "name": "statStr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "statStr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewChecked, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Pokemon, PokemonSpecies } from 'pokenode-ts';\nimport { PokedexService } from 'src/app/services/pokedex.service';\n\n@Component({\n  selector: 'app-entry',\n  templateUrl: './entry.component.html',\n  styleUrls: ['./entry.component.scss']\n})\nexport class EntryComponent implements AfterViewChecked {\n  @ViewChild('pokemonViewRef') pokemonViewRef: ElementRef | null = null;\n  pokemon: Pokemon | null = null;\n  pokemonSpecies: PokemonSpecies | null = null;\n  eggGroups: string[] = [];\n  pokemonName: string;\n\n\n  constructor(public pokedex: PokedexService, public router: Router) {\n    this.pokemonName = window.location.pathname.split('/')[2]; // It initially might be an id or a name\n    this.pokedex.client.pokemon.getPokemonByName(this.pokemonName).then((pokemon: Pokemon) => {\n      this.pokemon = pokemon;\n      this.pokemonName = this.pokemon.name; // Update to proper name in case it was an id\n      console.log(pokemon);\n\n      this.pokedex.client.pokemon.getPokemonSpeciesByName(this.pokemon.species.name).then((species) => {\n        this.pokemonSpecies = species;\n        this.eggGroups = species.egg_groups.map((eggGroup) => pokedex.identifierToReadableName((eggGroup.name)));\n      });\n\n    }).catch((err: Error) => {\n      console.log(err);\n      if (err.message.includes('404')) {\n        this.router.navigate(['/404']);\n      }\n    });\n\n    // Scroll to top on load\n\n  }\n\n  initScroll: boolean = false;\n  ngAfterViewChecked(): void {\n    if (this.pokemonViewRef && !this.initScroll) {\n      this.initScroll = true;\n      window.scrollTo(0, this.pokemonViewRef.nativeElement.offsetTop);\n      // this.pokemonViewRef.nativeElement.scrollTop = 100;\n      // this.pokemonViewRef.nativeElement.scrollIntoView();\n    }\n  }\n\n  getStatStr(statStr: string) {\n    if (!this.pokemon) {\n      return \"?\";\n    }\n    let stat = this.pokemon.stats.find((stat) => stat.stat.name === statStr);\n    if (stat) {\n      return stat.base_stat;\n    }\n    return \"?\";\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// Make all divs inside stats-card have a padding of 1rem\n.stats-card > div > h4 {\n  margin-left: 1rem;\n}\n\n:host  {\n\twidth: 100%;\n  height: 100%;\n  min-height: 100%;\n  min-width: 100%;\n  background: purple;\n  background-color: aquamarine;\n}\n\n",
                    "styleUrl": "./entry.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pokedex",
                        "type": "PokedexService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "pokedex",
                        "type": "PokedexService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewChecked"
            ],
            "templateData": "<div class=\"grid grid-cols-1 sm:grid-cols-2 h-full\">\n  <!-- Left -->\n  <div\n    #pokemonViewRef\n    class=\"sidebar flex flex-col flex-1 grid-cols-1 {{\n      this.pokemonSpecies?.color?.name || 'default'\n    }}-gradient min-h-screen\"\n  >\n    <!-- Left top bar -->\n    <div class=\"flex p-2 bg-gray-500/30 h-min max-h-screen text-white\">\n      <!-- Left -->\n      <div\n        matTooltip=\"Egg Group(s)\"\n        class=\"flex-1 font-bold m-auto text-white text-center align-middle p-1 rounded-md text-lg uppercase break-words\"\n      >\n        <span class=\"fa-solid fa-egg align-middle\">&nbsp;</span>\n        <span class=\"text-xs align-middle\">\n          {{ this.eggGroups.join(\", \") || \"?\" }}\n        </span>\n      </div>\n      <!-- Middle -->\n      <span\n        class=\"flex-1 whitespace-nowrap self-center m-auto text-lg font-bold gap-2 flex\"\n      >\n        <span>\n          {{ pokedex.identifierToReadableName(this.pokemonName) }}\n        </span>\n        <app-poketype\n          *ngFor=\"let TName of this.pokemon?.types\"\n          pokemonType=\"{{ TName.type.name }}\"\n        ></app-poketype>\n      </span>\n      <!-- Right -->\n      <div class=\"flex-1 text-lg text-center self-center\" matTooltip=\"Weight\">\n        <span class=\"fa-solid fa-weight-hanging text-white\"></span>\n        <span class=\"text-white text-bold\">\n          {{ this.pokemon?.weight || \"?\" }}\n        </span>\n      </div>\n    </div>\n    <!-- Pokemon preview -->\n    <div class=\"flex-1 flex justify-center align-middle\">\n      <img\n        class=\"object-contain p-4 pixelated w-full h-auto\"\n        src=\"{{\n          this.pokemon\n            ? this.pokemon.sprites.front_default || '/assets/img/MISSINGNO.webp'\n            : '/assets/img/MISSINGNO.webp'\n        }}\"\n        alt=\"Photo\n        of a {{ pokedex.identifierToReadableName(this.pokemonName) }}\"\n      />\n    </div>\n  </div>\n  <!-- Right -->\n  <div class=\"flex-1\">\n    <!-- Stats: HP, Attack, defence Sp. Atk, Sp. Def, Speed, Total -->\n    <!-- Use a 2 by 6 grid -->\n    <div\n      class=\"grid grid-cols-2 p-2 bg-white rounded-lg shadow-lg m-4 stats-card\"\n    >\n      <div>\n        <h4>Stats</h4>\n      </div>\n      <div>\n        <h4>Base</h4>\n      </div>\n      <div class=\"bg-red-500 text-white\">\n        <h4>HP</h4>\n      </div>\n      <div class=\"bg-red-300 shadow-lg\">\n        <h4>{{ getStatStr(\"hp\") }}</h4>\n      </div>\n      <div class=\"bg-orange-500 text-white\">\n        <h4>Attack</h4>\n      </div>\n      <div class=\"bg-orange-300\">\n        <h4>{{ getStatStr(\"attack\") }}</h4>\n      </div>\n      <div class=\"bg-yellow-500 text-white\">\n        <h4>Defence</h4>\n      </div>\n      <div class=\"bg-yellow-300\">\n        <h4>{{ getStatStr(\"defense\") }}</h4>\n      </div>\n      <div class=\"bg-blue-500 text-white\">\n        <h4>Sp. Atk</h4>\n      </div>\n      <div class=\"bg-blue-300 text\">\n        <h4>{{ getStatStr(\"special-attack\") }}</h4>\n      </div>\n      <div class=\"bg-green-500 text-white\">\n        <h4>Sp. Def</h4>\n      </div>\n      <div class=\"bg-green-300\">\n        <h4>{{ getStatStr(\"special-defense\") }}</h4>\n      </div>\n      <div class=\"bg-pink-500 text-white\">\n        <h4>Speed</h4>\n      </div>\n      <div class=\"bg-pink-300\">\n        <h4>{{ getStatStr(\"speed\") }}</h4>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FallbackComponent",
            "id": "component-FallbackComponent-05b30ea117360205fa199644dde555c3f16ad8cdd71854a4aa6dd76aaf8d157d2621d2be8c2eaadebd68725e9e96c4b4dd3184972f181a84b7c0735795ef9d3d",
            "file": "src/app/pages/fallback/fallback.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fallback",
            "styleUrls": [
                "./fallback.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./fallback.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fallback',\n  templateUrl: './fallback.component.html',\n  styleUrls: ['./fallback.component.scss']\n})\nexport class FallbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host  {\n\twidth: 100%;\n  height: 100%;\n}",
                    "styleUrl": "./fallback.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- flex center horizontal and verical -->\n<div class=\"flex justify-center items-center h-full\">\n  <!-- Aling vertical -->\n  <div class=\"flex flex-col gap-4 place-items-center\">\n    <h1 class=\"bold\">404 PAGE NOT FOUND</h1>\n    <img\n      routerLink=\"/pokemon/404\"\n      alt=\"Luxio\"\n      src=\"/assets/img/404.png\"\n      class=\"object-contain h-[50vh] cursor-pointer\"\n    />\n    <span>{{ \"404\" | translate }}</span>\n  </div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IndexComponent",
            "id": "component-IndexComponent-3b066b2b52ef0092d85341759dbbe07e9401a26a00b6272b9acae75c35d97b943e1def2d671b93268f863e23171f81dce54454210ae08f6080564628e3ae1021",
            "file": "src/app/pages/index/index.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-index",
            "styleUrls": [
                "./index.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./index.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss'],\n})\nexport class IndexComponent {\n\n  constructor() { }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host  {\n\twidth: 100%;\n  height: 100%;\n}",
                    "styleUrl": "./index.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div class=\"p-4\">\n  <h1>Welcome to PokeIndex!</h1>\n  <p>\n    Here, you can locally track and search for your favorite Pokémons! Click on\n    the search icon in the top right corner to get started!\n  </p>\n</div>\n"
        },
        {
            "name": "LocaleToggleComponent",
            "id": "component-LocaleToggleComponent-573b78d33171f220c7550e75fcc3522a0a7ad1a7f6ca2b4a2088934c4d75c9d83c1821c657002a6da8fac52b9e5cd8662ae7950bd083ec9a9df934b763d90066",
            "file": "src/app/components/locale-toggle/locale-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-locale-toggle",
            "styleUrls": [
                "./locale-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./locale-toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "availableLanguages",
                    "defaultValue": "[\"en\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "currentLanguage",
                    "defaultValue": "\"en\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeLanguage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the index of the current language and changes it to the next one provided by translate.getLangs()\n",
                    "description": "<p>Gets the index of the current language and changes it to the next one provided by translate.getLangs()</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-locale-toggle',\n  templateUrl: './locale-toggle.component.html',\n  styleUrls: ['./locale-toggle.component.scss']\n})\nexport class LocaleToggleComponent implements OnInit {\n  availableLanguages: string[] = [\"en\"];\n  currentLanguage = \"en\";\n\n  constructor(public translate: TranslateService) {\n\n  }\n  ngOnInit(): void {\n    const browserLang = localStorage.getItem('lang');\n    if (browserLang && this.translate.getLangs().includes(browserLang)) {\n      this.currentLanguage = browserLang;\n    }\n\n  }\n\n  /**\n   * Gets the index of the current language and changes it to the next one provided by translate.getLangs()\n   */\n  changeLanguage() {\n    const index = this.translate.getLangs().indexOf(this.currentLanguage);\n    const nextIndex = index + 1 < this.translate.getLangs().length ? index + 1 : 0;\n    this.currentLanguage = this.translate.getLangs()[nextIndex];\n    localStorage.setItem('lang', this.currentLanguage);\n    this.translate.use(this.currentLanguage);\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n\n.some {\n    background-color: var(mat-primary);\n}",
                    "styleUrl": "./locale-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  mat-stroked-button\n  (click)=\"changeLanguage()\"\n  matTooltip=\"{{ 'locale-toggle.tooltip' | translate }}\"\n>\n  {{ translate.currentLang.toUpperCase() }}\n</button>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PokecardComponent",
            "id": "component-PokecardComponent-521a21af7c2e578e54d91fe5c292e8fb20824927ac6113efabeda4e00a8740740a10731017dc9a1af482d816d7b30c23824ab5973d1d68f121ee994de53c1560",
            "file": "src/app/components/pokecard/pokecard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pokecard",
            "styleUrls": [
                "./pokecard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pokecard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "pokemonName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardColor",
                    "defaultValue": "\"blue\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "displayNumber",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pokedex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PokedexService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokemon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Pokemon | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "species",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PokemonSpecies | null",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "getPokemonCardNumber",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<number>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pokemonColorToCSSColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { Pokedex, Pokemon, PokemonSpecies } from 'pokenode-ts';\nimport { PokedexService } from 'src/app/services/pokedex.service';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-pokecard',\n  templateUrl: './pokecard.component.html',\n  styleUrls: ['./pokecard.component.scss']\n})\nexport class PokecardComponent implements OnInit {\n\n  @Input() pokemonName: string = \"\";\n  displayNumber: number | null = null;\n\n  pokemon: Pokemon | null = null;\n  species: PokemonSpecies | null = null;\n  cardColor = \"blue\";\n\n  constructor(public pokedex: PokedexService, public router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.pokedex.client.pokemon.getPokemonByName(this.pokemonName).then((pokemon) => {\n      this.pokemon = pokemon;\n      this.pokedex.client.pokemon.getPokemonSpeciesByName(this.pokemon.species.name).then((species) => {\n        this.species = species;\n        this.cardColor = this.pokemonColorToCSSColor();\n      });\n      this.getPokemonCardNumber().then((number) => {\n        this.displayNumber = number;\n      });\n    });\n\n\n  }\n\n  onClick() {\n    this.router.navigate(['/pokemon/', this.pokemonName]);\n  }\n\n  async getPokemonCardNumber(): Promise<number> {\n    if (!this.pokemon) {\n      return 0;\n    }\n\n    // If name != species.name, then it's a variant\n    if (this.pokemon.name !== this.pokemon.species.name) {\n      this.species = await this.pokedex.client.pokemon.getPokemonSpeciesByName(this.pokemon.species.name);\n      return this.species.pokedex_numbers[0].entry_number;\n    }\n\n    return this.pokemon.id;\n  }\n\n  pokemonColorToCSSColor(): string {\n    return this.species?.color.name || \"white\";\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-sprite-container {\n\tposition: relative;\n}\n\n// circle gradient comming from center\n.card-sprite {\n\tfilter: saturate(200%);\n}\n\n\n\n// Card content grid\n\n\n\t\n.card-content-top { \n\tgrid-area: 1 / 1 / 2 / 3;\n\tcolor: white;\n}\n.card-content-bottom { grid-area: 2 / 1 / 3 / 3; }\n\n// Override badge size\n.mat-badge-content {\n\tmargin-right: 1rem;\n\tmargin-top: 1rem;\n\twidth: 30px;\n\theight: 30px;\n\tline-height: 30px;\n\tbackground: rgb(255, 255, 255);\n\tcolor: black;\n}",
                    "styleUrl": "./pokecard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pokedex",
                        "type": "PokedexService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "pokedex",
                        "type": "PokedexService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  [attr.data-card-color]=\"this.cardColor\"\n  (click)=\"onClick()\"\n  [style]=\"'color:' + this.cardColor + ';'\"\n  class=\"static shadow-xl grid p-2 w-[150px] h-[245px] {{\n    this.cardColor\n  }}-gradient rounded-xl transform transition hover:scale-110 cursor-pointer select-none overflow-hidden\"\n  matBadge=\"#{{ this.displayNumber || '?' }}\"\n  matBadgePosition=\"after\"\n  matBadgeColor=\"primary\"\n>\n  <!-- Card Header (img) -->\n  <div class=\"rounded-t-lg w-full card-sprite-container bg-white/30\">\n    <img\n      class=\"card-sprite p-2 m-auto w-[90%] h-auto min-h-[50%] object-contain\"\n      fetchpriority=\"low\"\n      src=\"{{\n        this.pokemon\n          ? this.pokemon.sprites.front_default || '/assets/img/MISSINGNO.webp'\n          : '/assets/img/MISSINGNO.webp'\n      }}\"\n      alt=\"Photo\n    of a {{ pokedex.identifierToReadableName(this.pokemonName) }}\"\n    />\n  </div>\n\n  <!-- Card Content num/name/etc -->\n  <!-- {{this.cardColor}}-300  -->\n  <div\n    class=\"card-content grid rounded-b-lg place-items-center text-md bg-gray-500/30\"\n  >\n    <div class=\"card-content-top p-1 h-full w-full text-center font-extrabold\">\n      {{ pokedex.identifierToReadableName(this.pokemonName) }}\n    </div>\n\n    <div class=\"card-content-bottom inline-flex flex-wrap gap-4\">\n      <app-poketype\n        *ngFor=\"let TName of this.pokemon?.types\"\n        pokemonType=\"{{ TName.type.name }}\"\n      ></app-poketype>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PoketypeCheckboxComponent",
            "id": "component-PoketypeCheckboxComponent-322e43003a1d9340ff4da8cd8511e95d05ae42245605a8941b1ca6401f733a2d7d87bfc70b59301304a4aea6a63cfcde6e1323f2c0a16ef0a62c998c7f59fd21",
            "file": "src/app/components/poketype-checkbox/poketype-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-poketype-checkbox",
            "styleUrls": [
                "./poketype-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./poketype-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pokemonType",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<SVGElement>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'label'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-poketype-checkbox',\n  templateUrl: './poketype-checkbox.component.html',\n  styleUrls: ['./poketype-checkbox.component.scss']\n})\nexport class PoketypeCheckboxComponent implements AfterViewInit {\n  @Input() pokemonType: string = \"\";\n  @Input() isChecked: boolean = false;\n  @ViewChild('label') label!: ElementRef<SVGElement>;\n\n\n  constructor() { }\n\n\n  ngAfterViewInit() {\n    if (this.isChecked) {\n      this.label.nativeElement.classList.add('checked');\n    }\n  }\n\n  onClick() {\n    this.isChecked = !this.isChecked;\n    this.label.nativeElement.classList.toggle('checked');\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".checked {\n    filter: saturate(100%) blur(0px) !important;\n    transform: scale(1.2);\n    cursor: pointer;\n}\n\n.icon {\n    filter:  saturate(10%) blur(1px);\n    display: grid;\n    place-items: center;\n    border-radius: 100%;\n    height: 2rem;\n    width: 2rem;\n    transition: 200ms all;\n}",
                    "styleUrl": "./poketype-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div\n  #label\n  class=\"icon {{ pokemonType }} select-none\"\n  matTooltip=\"{{ pokemonType | uppercase }}\"\n  (click)=\"onClick()\"\n>\n  <img\n    src=\"assets/img/poketype/{{ pokemonType }}.svg\"\n    alt=\"{{ pokemonType }} icon\"\n  />\n</div>\n"
        },
        {
            "name": "PoketypeComponent",
            "id": "component-PoketypeComponent-6a1f3cea537ade2b5c6b02f5a140fecce1a2491e6867ad659a3dec3119366540ff223a00c1b4786476f4f152f17458dc14f0ce4e74af74fa617b66bfd2bda334",
            "file": "src/app/components/poketype/poketype.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-poketype",
            "styleUrls": [
                "./poketype.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./poketype.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "pokemonType",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\n// Assets taken from \n// https://github.com/duiker101/pokemon-type-svg-icons\n@Component({\n  selector: 'app-poketype',\n  templateUrl: './poketype.component.html',\n  styleUrls: ['./poketype.component.scss']\n})\nexport class PoketypeComponent implements OnInit {\n  @Input() pokemonType: string = \"\";\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".icon:hover{\n    filter: saturate(200%);\n    transform: scale(1.1);\n    cursor: pointer;\n}",
                    "styleUrl": "./poketype.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"icon {{ pokemonType }}\" matTooltip=\"{{ pokemonType | uppercase }}\">\n  <img\n    src=\"assets/img/poketype/{{ pokemonType }}.svg\"\n    alt=\"{{ pokemonType }} icon\"\n  />\n</div>\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-87eb0cfbb3c2d51cbefb994e03c4dc01ab57f93212633dfc0e44cf6599b800568f6f863e9205a1180d08477dbed290d24e2cbba1c2427f59015baa474911471e",
            "file": "src/app/pages/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isSearching",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "localFilteredPokemon",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pokedex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PokedexService",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokemonTypesList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchReloadFlag",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "typeFilter",
                    "defaultValue": "new Set()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<string>",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "canShowSuggest",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "getPokemonTypesByName",
                    "args": [
                        {
                            "name": "pokemon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<string[]>",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "pokemon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onToggleTypeFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "randomPokemon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Types } from 'pokenode-ts';\nimport { PokedexService } from 'src/app/services/pokedex.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent {\n  typeFilter: Set<string> = new Set();\n\n\n  localFilteredPokemon: string[] = [];\n  pokemonTypesList: string[] = [];\n\n  constructor(public pokedex: PokedexService, public route: Router) {\n    // Check if route has a query parameter -> search/:query\n    let routeParts = this.route.url.split(\"/\");\n    // Check if last part is a not \"search\" and not empty\n    if (routeParts[routeParts.length - 1] !== \"search\" && routeParts[routeParts.length - 1] !== \"\") {\n      let routerSearchQuery = routeParts[routeParts.length - 1];\n      routerSearchQuery = decodeURIComponent(routerSearchQuery);\n      // Convert url to readable name using decodeURIComponent\n      console.log(\"Searching for \" + routerSearchQuery);\n      this.pokedex.nameFilterPokemon(routerSearchQuery);\n    }\n\n    let types = Object.values(Types);\n    // Filter only strings and convert to lowercase\n    this.pokemonTypesList = types.filter((type) => typeof type === \"string\").map((type) => (type as string).toLowerCase());\n    this.pokedex.filteredPokemon.subscribe((pokemons) => {\n      this.localFilteredPokemon = pokemons;\n      this.doFilter();\n    });\n  }\n\n  randomPokemon() {\n    console.log(\"Searching for random pokemon\");\n    let randomPokemon = this.pokedex.pokemonIdentifiers[Math.floor(Math.random() * this.pokedex.pokemonIdentifiers.length)];\n    this.pokedex.nameFilterPokemon(randomPokemon);\n    this.pokedex.previousSearch = randomPokemon;\n    this.pokedex.nextSearchTask = randomPokemon;\n    localStorage.setItem(\"search\", randomPokemon);\n    this.route.navigate(['/search', randomPokemon]);\n  }\n\n  onToggleTypeFilter(event: any, type: string) {\n    let state = event.target.checked;\n    if (!state) {\n      this.typeFilter.add(type);\n    } else {\n      this.typeFilter.delete(type);\n    }\n    this.doFilter();\n  }\n\n  async getPokemonTypesByName(pokemon: string): Promise<string[]> {\n    let poke = await this.pokedex.client.pokemon.getPokemonByName(pokemon);\n    return poke.types.map((type) => type.type.name);\n  }\n\n  isSearching = false;\n  searchReloadFlag = false;\n  async doFilter() {\n    if (this.isSearching) {\n      this.searchReloadFlag = true;\n      return;\n    }\n\n    this.isSearching = true;\n    // Initial name filter\n    let res = this.pokedex.filteredPokemon.getValue();\n    // Filter by type\n    for (let type of this.typeFilter) {\n      for (let pokemon of res) {\n        if ((await this.getPokemonTypesByName(pokemon)).includes(type)) {\n          res = res.filter((p) => p !== pokemon);\n        }\n      }\n    }\n    this.localFilteredPokemon = res;\n    this.isSearching = false;\n    if (this.searchReloadFlag) {\n      this.searchReloadFlag = false;\n      this.doFilter();\n    }\n  }\n\n  canShowSuggest() {\n    let prevQuoted = this.pokedex.previousSearch.startsWith('\"') && this.pokedex.previousSearch.endsWith('\"');\n\n    let nameToSuggest = this.pokedex.identifierToReadableName(this.localFilteredPokemon[0]);\n    let inputBoxName = this.pokedex.previousSearch;\n\n    // Check if: search is not quoted, search is not empty, search is not equal to the first pokemon in the list\n    return this.pokedex.previousSearch.length !== 0 && !prevQuoted && nameToSuggest.toLowerCase() !== inputBoxName.toLowerCase();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// Page layout\n\n.search-layout {\n    display: grid;\n    padding: 1rem;\n    grid-template-columns: 0.25fr 1fr;\n    grid-column-gap: 10px;\n}\n\n@media (max-width: --sm) {\n    .search-layout {\n        grid-template-columns: 1fr;\n    }\n}\n    \n\n\n// Grid with auto number of rows to fit 250px wide cards\n.card-list-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 150px);\n}\n\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pokedex",
                        "type": "PokedexService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "pokedex",
                        "type": "PokedexService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<!-- 2 boxes (Filter, Search) -->\n<div class=\"search-layout block md:grid\">\n  <!-- Filters -->\n  <div>\n    <h1>Filters</h1>\n    <h2>Pokemon Types:</h2>\n    <div class=\"flex flex-wrap gap-4\">\n      <div *ngFor=\"let TName of this.pokemonTypesList\">\n        <label for=\"{{ TName }}-checkbox\" class=\"label-example\">\n          <app-poketype-checkbox\n            pokemonType=\"{{ TName }}\"\n            [isChecked]=\"true\"\n          ></app-poketype-checkbox\n        ></label>\n        <input\n          type=\"checkbox\"\n          id=\"{{ TName }}-checkbox\"\n          class=\"hidden\"\n          checked\n          (click)=\"onToggleTypeFilter($event, TName)\"\n        />\n      </div>\n    </div>\n  </div>\n\n  <!-- Search Results -->\n  <div\n    class=\"p-2 flex-1\"\n    *ngIf=\"this.localFilteredPokemon.slice(0, 50).length !== 0\"\n  >\n    <div class=\"text-lg\" *ngIf=\"canShowSuggest()\">\n      Did you mean\n      <a\n        class=\"underline text-bold text-blue-500\"\n        routerLink=\"/search/&quot;{{\n          this.pokedex.identifierToReadableName(this.localFilteredPokemon[0])\n        }}&quot;\"\n      >\n        {{\n          this.pokedex.identifierToReadableName(this.localFilteredPokemon[0])\n        }}\n      </a>\n      ?\n    </div>\n    <br />\n    <div\n      class=\"card-list-container self-center ml-0 mr-0 mt-0 justify-center gap-4\"\n    >\n      <!-- Pokemon Card list -->\n      <app-pokecard\n        *ngFor=\"let pokemonName of this.localFilteredPokemon.slice(0, 50)\"\n        [pokemonName]=\"pokemonName\"\n      ></app-pokecard>\n    </div>\n  </div>\n\n  <!-- No cards found -->\n  <!-- flex center horizontal and verical -->\n  <div\n    class=\"flex justify-center flex-1 w-screen\"\n    *ngIf=\"this.localFilteredPokemon.slice(0, 50).length === 0\"\n  >\n    <!-- Aling vertical -->\n    <div class=\"grid grid-cols-1 gap-4 place-items-center\">\n      <h1 class=\"bold\">Nothing found!</h1>\n      <img\n        (click)=\"randomPokemon()\"\n        alt=\"MISSINGNO\"\n        src=\"/assets/img/MISSINGNO.webp\"\n        class=\"object-contain h-[50vh] pixelated cursor-pointer\"\n      />\n      <span>A wild MISSINGNO appeared!</span> <br />\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "TitlebarComponent",
            "id": "component-TitlebarComponent-44b860fb46566421163bcf18120f32a27a83dbee40bd008e946628f660126caaf9605f4f2bd06e982f70cbb39e873c3ceca6bfed8a7165166ac8ab976873366f",
            "file": "src/app/components/titlebar/titlebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-titlebar",
            "styleUrls": [
                "./titlebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./titlebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lastStrSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pokedex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PokedexService",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "routerSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "searchRef",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | null",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'searchInput'"
                        }
                    ]
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PokedexService } from 'src/app/services/pokedex.service';\n\n@Component({\n  selector: 'app-titlebar',\n  templateUrl: './titlebar.component.html',\n  styleUrls: ['./titlebar.component.scss']\n})\nexport class TitlebarComponent implements OnInit, OnDestroy {\n  @ViewChild('searchInput') searchRef: ElementRef | null = null;\n  public lastStrSize = 0;\n  public searchValue: string = \"\";\n\n  routerSubscription: Subscription | undefined;\n\n\n  constructor(public pokedex: PokedexService, public router: Router) {\n  }\n\n  ngOnInit(): void {\n    // Check if there is a hash in the url\n    this.searchValue = localStorage.getItem(\"search\") || \"\";\n    // On press \"/\" focus on search bar\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"/\" && this.searchRef) {\n        // window.scrollTo(0, 0); (This does not work on webKit)\n        this.searchRef.nativeElement.scrollTop = 100;\n        this.searchRef.nativeElement.focus();\n        this.searchValue = \"\";\n\n        // Remove the last character from the search bar\n        // HACK: For some reason, even after returning false, the mat-input still consumes the \"/\" character\n        setTimeout(() => {\n          if (this.searchRef) {\n            this.searchRef.nativeElement.value = this.searchRef.nativeElement.value.slice(0, -1);\n            this.searchRef.nativeElement.select();\n          }\n        }, 0);\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.routerSubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        // Reload the search bar text in case any changes were made\n        this.searchValue = localStorage.getItem(\"search\") || this.pokedex.previousSearch;\n        this.searchValue = this.pokedex.identifierToReadableName(this.searchValue);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.routerSubscription) {\n      this.routerSubscription.unsubscribe();\n    }\n  }\n\n  public onFocus() {\n    // If not on /search, redirect to /search\n    if (this.router.url !== \"/search\") {\n      this.router.navigate([\"/search\"]);\n    }\n  }\n\n  public onInput(event: any) {\n    this.pokedex.nameFilterPokemon(event.target.value as string);\n  }\n\n  public onSubmit() {\n    console.log(\"Submitted\");\n    let pokemonsResult = this.pokedex.filteredPokemon.getValue();\n    // If there are no results, do nothing\n    if (pokemonsResult.length === 0) {\n      return;\n    }\n    // If there is more than one result, redirect to it\n    this.router.navigate([\"/pokemon\", pokemonsResult[0]]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./titlebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pokedex",
                        "type": "PokedexService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "pokedex",
                        "type": "PokedexService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!-- Fine example for reference -->\n<!-- https://flowbite.com/docs/components/navbar/ -->\n<nav\n  class=\"p-4 w-full bg-white self-center inline-flex flex-wrap justify-center items-center gap-4 z-10 overflow-hidden\"\n>\n  <!-- Logo -->\n  <a routerLink=\"/\" class=\"flex items-center select-none gap-4\">\n    <img\n      src=\"assets/img/favicon.svg\"\n      alt=\"Logo\"\n      class=\"w-10 h-10 object-contain\"\n    />\n    <span class=\"text-2xl\">PokeIndex</span>\n  </a>\n  <!-- Locale switch -->\n  <app-locale-toggle></app-locale-toggle>\n  <!-- Search Bar -->\n\n  <mat-form-field appearance=\"standard\" class=\"flex-1\" (ngSubmit)=\"onSubmit()\">\n    <mat-label>Pokémon name</mat-label>\n    <span matPrefix class=\"fa-solid fa-magnifying-glass\">&nbsp;</span>\n    <input\n      #searchInput\n      matInput\n      aria-label=\"Pokemon Name or Number\"\n      [value]=\"searchValue\"\n      (input)=\"onInput($event)\"\n      (change)=\"onInput($event)\"\n      (focus)=\"onFocus()\"\n      (keydown.enter)=\"onSubmit()\"\n    />\n    <div matSuffix class=\"py-4\">\n      <span class=\"kbd\">/</span>\n    </div>\n  </mat-form-field>\n</nav>\n"
        },
        {
            "name": "TypelabelComponent",
            "id": "component-TypelabelComponent-3efcfdb4e3aa3cd794cf531d6afeb053cf14d18262645639b2a22a7df596d65f4a95e82241bcb9e4b977ea24e7ce3777031fcad99acc485aba68436cf86bfe14",
            "file": "src/app/components/typelabel/typelabel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typelabel",
            "styleUrls": [
                "./typelabel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./typelabel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "typeName",
                    "defaultValue": "\"Unknown\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "colorFromTypeName",
                    "args": [],
                    "optional": false,
                    "returnType": "\"bg-gray-300\" | \"bg-red-500\" | \"bg-red-800\" | \"bg-blue-500\" | \"bg-purple-500\" | \"bg-green-500\" | \"bg-purple-800\" | \"bg-yellow-500\" | \"bg-yellow-800\" | \"bg-pink-500\" | \"bg-yellow-900\" | ... 7 more ... | \"bg-silver-500\"",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-typelabel',\n  templateUrl: './typelabel.component.html',\n  styleUrls: ['./typelabel.component.scss']\n})\nexport class TypelabelComponent implements OnInit {\n  @Input() typeName: string = \"Unknown\";\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n    console.log(this.typeName.toLowerCase() as string);\n  }\n\n  colorFromTypeName() {\n    let t = this.typeName.toLowerCase();\n    // normal, fire, fighting, water, flying, grass, poison, electric, ground, psychic, rock, ice, bug, dragon, ghost, dark, steel, fairy, ???\n    switch (t) {\n      case \"normal\":\n        return \"bg-gray-300\";\n      case \"fire\":\n        return \"bg-red-500\";\n      case \"fighting\":\n        return \"bg-red-800\";\n      case \"water\":\n        return \"bg-blue-500\";\n      case \"flying\":\n        return \"bg-purple-500\";\n      case \"grass\":\n        return \"bg-green-500\";\n      case \"poison\":\n        return \"bg-purple-800\";\n      case \"electric\":\n        return \"bg-yellow-500\";\n      case \"ground\":\n        return \"bg-yellow-800\";\n      case \"psychic\":\n        return \"bg-pink-500\";\n      case \"rock\":\n        return \"bg-yellow-900\";\n      case \"ice\":\n        return \"bg-blue-200\";\n      case \"bug\":\n        return \"bg-green-800\";\n      case \"dragon\":\n        return \"bg-purple-200\";\n      case \"ghost\":\n        return \"bg-purple-600\";\n      case \"dark\":\n        return \"bg-gray-800\";\n      case \"steel\":\n        return \"bg-gray-500\";\n      case \"fairy\":\n        return \"bg-pink-200\";\n      case \"???\":\n        return \"bg-silver-500\";\n      default:\n        return \"bg-gray-300\";\n    }\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./typelabel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<span class=\"{{ colorFromTypeName() }} p-1 rounded-md text-sm uppercase\">\n  &nbsp; {{ typeName }} &nbsp;\n</span>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-433bea07a6ff0fe605a4181af8a17610e30caed0a5fa5623fd62866351a0bac78ec518dcfa6fc5d44c400295b1f1f83729201dff7bccf742feabffa4055b7c84",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "// Base\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// Components\nimport { TitlebarComponent } from './components/titlebar/titlebar.component';\n\n// Pages\nimport { IndexComponent } from './pages/index/index.component';\nimport { FallbackComponent } from './pages/fallback/fallback.component';\n\n// Material UI\nimport { MaterialModule } from './external/material.module';\n\n// Translation\n// https://ramya-bala221190.medium.com/using-ngx-translate-to-switch-the-language-of-a-form-in-your-angular-application-d3e2ebd469d7\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LocaleToggleComponent } from './components/locale-toggle/locale-toggle.component';\nimport { SearchComponent } from './pages/search/search.component';\nimport { PokecardComponent } from './components/pokecard/pokecard.component';\nimport { EntryComponent } from './pages/entry/entry.component';\nimport { TypelabelComponent } from './components/typelabel/typelabel.component';\nimport { PoketypeComponent } from './components/poketype/poketype.component';\nimport { PoketypeCheckboxComponent } from './components/poketype-checkbox/poketype-checkbox.component';\nimport { NgxCheckboxModule } from 'ngx-checkbox';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitlebarComponent,\n    IndexComponent,\n    FallbackComponent,\n    LocaleToggleComponent,\n    SearchComponent,\n    PokecardComponent,\n    EntryComponent,\n    TypelabelComponent,\n    PoketypeComponent,\n    PoketypeCheckboxComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule,\n    NgxCheckboxModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "EntryComponent"
                        },
                        {
                            "name": "FallbackComponent"
                        },
                        {
                            "name": "IndexComponent"
                        },
                        {
                            "name": "LocaleToggleComponent"
                        },
                        {
                            "name": "PokecardComponent"
                        },
                        {
                            "name": "PoketypeCheckboxComponent"
                        },
                        {
                            "name": "PoketypeComponent"
                        },
                        {
                            "name": "SearchComponent"
                        },
                        {
                            "name": "TitlebarComponent"
                        },
                        {
                            "name": "TypelabelComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-552b57bdc968a8c529a4f54dfa7e940541bf48b6a20b4f451fef30ede418e36075a2d760cee7a0626f466f7ea4a76af00437a0a1fcfaba7fd1400be1a00a03fa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EntryComponent } from './pages/entry/entry.component';\nimport { FallbackComponent } from './pages/fallback/fallback.component';\nimport { IndexComponent } from './pages/index/index.component';\nimport { SearchComponent } from './pages/search/search.component';\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'search/:query', component: SearchComponent },\n  { path: 'pokemon/:id', component: EntryComponent },\n  { path: '**', component: FallbackComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-f3549f29784579b3b07b438a66ef194b13f2584a2c95b816b6617371e93b52a22d8642c71dcb903ea3fa5e27863f0950efb66e9761b2154c27db64da51f3a867",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/external/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// Material Form Controls\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n// Material Navigation\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n// Material Layout\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTreeModule } from '@angular/material/tree';\n// Material Buttons & Indicators\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRippleModule } from '@angular/material/core';\n// Material Popups & Modals\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n// Material Data tables\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        MatAutocompleteModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatListModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatBadgeModule,\n        MatChipsModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatBottomSheetModule,\n        MatDialogModule,\n        MatSnackBarModule,\n        MatTooltipModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatTableModule,\n    ],\n    exports: [\n        MatAutocompleteModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatListModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatBadgeModule,\n        MatChipsModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatBottomSheetModule,\n        MatDialogModule,\n        MatSnackBarModule,\n        MatTooltipModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatTableModule,\n    ],\n})\nexport class MaterialModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [
            {
                "name": "getStringDifference",
                "file": "src/app/lib/stringComp.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "first",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "second",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "first",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "second",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getStringScores",
                "file": "src/app/lib/stringComp.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Helper function that maps all strings to a score with async iteration so that it doesn&#39;t block the UI</p>\n",
                "args": [
                    {
                        "name": "baseString",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stringLst",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Promise<number[]>",
                "jsdoctags": [
                    {
                        "name": "baseString",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stringLst",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "tagName": {
                            "pos": 1246,
                            "end": 1253,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "returns"
                        },
                        "comment": "<p>an array with the score of each string in the array</p>\n"
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/lib/stringComp.ts": [
                {
                    "name": "getStringDifference",
                    "file": "src/app/lib/stringComp.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "first",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "second",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "first",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "second",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStringScores",
                    "file": "src/app/lib/stringComp.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Helper function that maps all strings to a score with async iteration so that it doesn&#39;t block the UI</p>\n",
                    "args": [
                        {
                            "name": "baseString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "stringLst",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Promise<number[]>",
                    "jsdoctags": [
                        {
                            "name": "baseString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "stringLst",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1246,
                                "end": 1253,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>an array with the score of each string in the array</p>\n"
                        }
                    ]
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "IndexComponent"
                    },
                    {
                        "path": "search",
                        "component": "SearchComponent"
                    },
                    {
                        "path": "search/:query",
                        "component": "SearchComponent"
                    },
                    {
                        "path": "pokemon/:id",
                        "component": "EntryComponent"
                    },
                    {
                        "path": "**",
                        "component": "FallbackComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/locale-toggle/locale-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocaleToggleComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pokecard/pokecard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokecardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/poketype-checkbox/poketype-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoketypeCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/poketype/poketype.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PoketypeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/titlebar/titlebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitlebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/typelabel/typelabel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypelabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/lib/stringComp.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getStringDifference",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/lib/stringComp.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getStringScores",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/entry/entry.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/fallback/fallback.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FallbackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/index/index.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/services/pokedex.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PokedexService",
                "coveragePercent": 15,
                "coverageCount": "2/13",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}